// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CandidateNominated extends ethereum.Event {
  get params(): CandidateNominated__Params {
    return new CandidateNominated__Params(this);
  }
}

export class CandidateNominated__Params {
  _event: CandidateNominated;

  constructor(event: CandidateNominated) {
    this._event = event;
  }

  get candidate(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get epochIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class CouncilMemberAdded extends ethereum.Event {
  get params(): CouncilMemberAdded__Params {
    return new CouncilMemberAdded__Params(this);
  }
}

export class CouncilMemberAdded__Params {
  _event: CouncilMemberAdded;

  constructor(event: CouncilMemberAdded) {
    this._event = event;
  }

  get member(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get epochIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class CouncilMemberRemoved extends ethereum.Event {
  get params(): CouncilMemberRemoved__Params {
    return new CouncilMemberRemoved__Params(this);
  }
}

export class CouncilMemberRemoved__Params {
  _event: CouncilMemberRemoved;

  constructor(event: CouncilMemberRemoved) {
    this._event = event;
  }

  get member(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get epochIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class CouncilMembersDismissed extends ethereum.Event {
  get params(): CouncilMembersDismissed__Params {
    return new CouncilMembersDismissed__Params(this);
  }
}

export class CouncilMembersDismissed__Params {
  _event: CouncilMembersDismissed;

  constructor(event: CouncilMembersDismissed) {
    this._event = event;
  }

  get members(): Array<Address> {
    return this._event.parameters[0].value.toAddressArray();
  }

  get epochIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class CouncilTokenCreated extends ethereum.Event {
  get params(): CouncilTokenCreated__Params {
    return new CouncilTokenCreated__Params(this);
  }
}

export class CouncilTokenCreated__Params {
  _event: CouncilTokenCreated;

  constructor(event: CouncilTokenCreated) {
    this._event = event;
  }

  get proxy(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get implementation(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class CouncilTokenUpgraded extends ethereum.Event {
  get params(): CouncilTokenUpgraded__Params {
    return new CouncilTokenUpgraded__Params(this);
  }
}

export class CouncilTokenUpgraded__Params {
  _event: CouncilTokenUpgraded;

  constructor(event: CouncilTokenUpgraded) {
    this._event = event;
  }

  get newImplementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class DefaultBallotEvaluationBatchSizeChanged extends ethereum.Event {
  get params(): DefaultBallotEvaluationBatchSizeChanged__Params {
    return new DefaultBallotEvaluationBatchSizeChanged__Params(this);
  }
}

export class DefaultBallotEvaluationBatchSizeChanged__Params {
  _event: DefaultBallotEvaluationBatchSizeChanged;

  constructor(event: DefaultBallotEvaluationBatchSizeChanged) {
    this._event = event;
  }

  get size(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ElectionBatchEvaluated extends ethereum.Event {
  get params(): ElectionBatchEvaluated__Params {
    return new ElectionBatchEvaluated__Params(this);
  }
}

export class ElectionBatchEvaluated__Params {
  _event: ElectionBatchEvaluated;

  constructor(event: ElectionBatchEvaluated) {
    this._event = event;
  }

  get epochIndex(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get evaluatedBallots(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get totalBallots(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ElectionEvaluated extends ethereum.Event {
  get params(): ElectionEvaluated__Params {
    return new ElectionEvaluated__Params(this);
  }
}

export class ElectionEvaluated__Params {
  _event: ElectionEvaluated;

  constructor(event: ElectionEvaluated) {
    this._event = event;
  }

  get epochIndex(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get totalBallots(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ElectionModuleInitialized extends ethereum.Event {
  get params(): ElectionModuleInitialized__Params {
    return new ElectionModuleInitialized__Params(this);
  }
}

export class ElectionModuleInitialized__Params {
  _event: ElectionModuleInitialized;

  constructor(event: ElectionModuleInitialized) {
    this._event = event;
  }
}

export class EmergencyElectionStarted extends ethereum.Event {
  get params(): EmergencyElectionStarted__Params {
    return new EmergencyElectionStarted__Params(this);
  }
}

export class EmergencyElectionStarted__Params {
  _event: EmergencyElectionStarted;

  constructor(event: EmergencyElectionStarted) {
    this._event = event;
  }

  get epochIndex(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class EpochScheduleUpdated extends ethereum.Event {
  get params(): EpochScheduleUpdated__Params {
    return new EpochScheduleUpdated__Params(this);
  }
}

export class EpochScheduleUpdated__Params {
  _event: EpochScheduleUpdated;

  constructor(event: EpochScheduleUpdated) {
    this._event = event;
  }

  get nominationPeriodStartDate(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get votingPeriodStartDate(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get epochEndDate(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class EpochStarted extends ethereum.Event {
  get params(): EpochStarted__Params {
    return new EpochStarted__Params(this);
  }
}

export class EpochStarted__Params {
  _event: EpochStarted;

  constructor(event: EpochStarted) {
    this._event = event;
  }

  get epochIndex(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class MaxDateAdjustmentToleranceChanged extends ethereum.Event {
  get params(): MaxDateAdjustmentToleranceChanged__Params {
    return new MaxDateAdjustmentToleranceChanged__Params(this);
  }
}

export class MaxDateAdjustmentToleranceChanged__Params {
  _event: MaxDateAdjustmentToleranceChanged;

  constructor(event: MaxDateAdjustmentToleranceChanged) {
    this._event = event;
  }

  get tolerance(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class MinimumActiveMembersChanged extends ethereum.Event {
  get params(): MinimumActiveMembersChanged__Params {
    return new MinimumActiveMembersChanged__Params(this);
  }
}

export class MinimumActiveMembersChanged__Params {
  _event: MinimumActiveMembersChanged;

  constructor(event: MinimumActiveMembersChanged) {
    this._event = event;
  }

  get minimumActiveMembers(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class MinimumEpochDurationsChanged extends ethereum.Event {
  get params(): MinimumEpochDurationsChanged__Params {
    return new MinimumEpochDurationsChanged__Params(this);
  }
}

export class MinimumEpochDurationsChanged__Params {
  _event: MinimumEpochDurationsChanged;

  constructor(event: MinimumEpochDurationsChanged) {
    this._event = event;
  }

  get minNominationPeriodDuration(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get minVotingPeriodDuration(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get minEpochDuration(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class NextEpochSeatCountChanged extends ethereum.Event {
  get params(): NextEpochSeatCountChanged__Params {
    return new NextEpochSeatCountChanged__Params(this);
  }
}

export class NextEpochSeatCountChanged__Params {
  _event: NextEpochSeatCountChanged;

  constructor(event: NextEpochSeatCountChanged) {
    this._event = event;
  }

  get seatCount(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class NominationWithdrawn extends ethereum.Event {
  get params(): NominationWithdrawn__Params {
    return new NominationWithdrawn__Params(this);
  }
}

export class NominationWithdrawn__Params {
  _event: NominationWithdrawn;

  constructor(event: NominationWithdrawn) {
    this._event = event;
  }

  get candidate(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get epochIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class VoteRecorded extends ethereum.Event {
  get params(): VoteRecorded__Params {
    return new VoteRecorded__Params(this);
  }
}

export class VoteRecorded__Params {
  _event: VoteRecorded;

  constructor(event: VoteRecorded) {
    this._event = event;
  }

  get voter(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get ballotId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get epochIndex(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get votePower(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class VoteWithdrawn extends ethereum.Event {
  get params(): VoteWithdrawn__Params {
    return new VoteWithdrawn__Params(this);
  }
}

export class VoteWithdrawn__Params {
  _event: VoteWithdrawn;

  constructor(event: VoteWithdrawn) {
    this._event = event;
  }

  get voter(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get ballotId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get epochIndex(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get votePower(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class CrossChainDebtShareDeclared extends ethereum.Event {
  get params(): CrossChainDebtShareDeclared__Params {
    return new CrossChainDebtShareDeclared__Params(this);
  }
}

export class CrossChainDebtShareDeclared__Params {
  _event: CrossChainDebtShareDeclared;

  constructor(event: CrossChainDebtShareDeclared) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get debtShare(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class CrossChainDebtShareMerkleRootSet extends ethereum.Event {
  get params(): CrossChainDebtShareMerkleRootSet__Params {
    return new CrossChainDebtShareMerkleRootSet__Params(this);
  }
}

export class CrossChainDebtShareMerkleRootSet__Params {
  _event: CrossChainDebtShareMerkleRootSet;

  constructor(event: CrossChainDebtShareMerkleRootSet) {
    this._event = event;
  }

  get merkleRoot(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get blocknumber(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get epoch(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class DebtShareContractSet extends ethereum.Event {
  get params(): DebtShareContractSet__Params {
    return new DebtShareContractSet__Params(this);
  }
}

export class DebtShareContractSet__Params {
  _event: DebtShareContractSet;

  constructor(event: DebtShareContractSet) {
    this._event = event;
  }

  get contractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class DebtShareSnapshotIdSet extends ethereum.Event {
  get params(): DebtShareSnapshotIdSet__Params {
    return new DebtShareSnapshotIdSet__Params(this);
  }
}

export class DebtShareSnapshotIdSet__Params {
  _event: DebtShareSnapshotIdSet;

  constructor(event: DebtShareSnapshotIdSet) {
    this._event = event;
  }

  get snapshotId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class OwnerChanged extends ethereum.Event {
  get params(): OwnerChanged__Params {
    return new OwnerChanged__Params(this);
  }
}

export class OwnerChanged__Params {
  _event: OwnerChanged;

  constructor(event: OwnerChanged) {
    this._event = event;
  }

  get oldOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnerNominated extends ethereum.Event {
  get params(): OwnerNominated__Params {
    return new OwnerNominated__Params(this);
  }
}

export class OwnerNominated__Params {
  _event: OwnerNominated;

  constructor(event: OwnerNominated) {
    this._event = event;
  }

  get newOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Upgraded extends ethereum.Event {
  get params(): Upgraded__Params {
    return new Upgraded__Params(this);
  }
}

export class Upgraded__Params {
  _event: Upgraded;

  constructor(event: Upgraded) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ElectionModuleOld__getMinEpochDurationsResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getMinNominationPeriodDuration(): BigInt {
    return this.value0;
  }

  getMinVotingPeriodDuration(): BigInt {
    return this.value1;
  }

  getMinEpochDuration(): BigInt {
    return this.value2;
  }
}

export class ElectionModuleOld extends ethereum.SmartContract {
  static bind(address: Address): ElectionModuleOld {
    return new ElectionModuleOld("ElectionModuleOld", address);
  }

  getBallotCandidatesInEpoch(
    ballotId: Bytes,
    epochIndex: BigInt
  ): Array<Address> {
    let result = super.call(
      "getBallotCandidatesInEpoch",
      "getBallotCandidatesInEpoch(bytes32,uint256):(address[])",
      [
        ethereum.Value.fromFixedBytes(ballotId),
        ethereum.Value.fromUnsignedBigInt(epochIndex)
      ]
    );

    return result[0].toAddressArray();
  }

  try_getBallotCandidatesInEpoch(
    ballotId: Bytes,
    epochIndex: BigInt
  ): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getBallotCandidatesInEpoch",
      "getBallotCandidatesInEpoch(bytes32,uint256):(address[])",
      [
        ethereum.Value.fromFixedBytes(ballotId),
        ethereum.Value.fromUnsignedBigInt(epochIndex)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getBallotVotedAtEpoch(user: Address, epochIndex: BigInt): Bytes {
    let result = super.call(
      "getBallotVotedAtEpoch",
      "getBallotVotedAtEpoch(address,uint256):(bytes32)",
      [
        ethereum.Value.fromAddress(user),
        ethereum.Value.fromUnsignedBigInt(epochIndex)
      ]
    );

    return result[0].toBytes();
  }

  try_getBallotVotedAtEpoch(
    user: Address,
    epochIndex: BigInt
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getBallotVotedAtEpoch",
      "getBallotVotedAtEpoch(address,uint256):(bytes32)",
      [
        ethereum.Value.fromAddress(user),
        ethereum.Value.fromUnsignedBigInt(epochIndex)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getBallotVotesInEpoch(ballotId: Bytes, epochIndex: BigInt): BigInt {
    let result = super.call(
      "getBallotVotesInEpoch",
      "getBallotVotesInEpoch(bytes32,uint256):(uint256)",
      [
        ethereum.Value.fromFixedBytes(ballotId),
        ethereum.Value.fromUnsignedBigInt(epochIndex)
      ]
    );

    return result[0].toBigInt();
  }

  try_getBallotVotesInEpoch(
    ballotId: Bytes,
    epochIndex: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getBallotVotesInEpoch",
      "getBallotVotesInEpoch(bytes32,uint256):(uint256)",
      [
        ethereum.Value.fromFixedBytes(ballotId),
        ethereum.Value.fromUnsignedBigInt(epochIndex)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCandidateVotesInEpoch(candidate: Address, epochIndex: BigInt): BigInt {
    let result = super.call(
      "getCandidateVotesInEpoch",
      "getCandidateVotesInEpoch(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(candidate),
        ethereum.Value.fromUnsignedBigInt(epochIndex)
      ]
    );

    return result[0].toBigInt();
  }

  try_getCandidateVotesInEpoch(
    candidate: Address,
    epochIndex: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getCandidateVotesInEpoch",
      "getCandidateVotesInEpoch(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(candidate),
        ethereum.Value.fromUnsignedBigInt(epochIndex)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getElectionWinnersInEpoch(epochIndex: BigInt): Array<Address> {
    let result = super.call(
      "getElectionWinnersInEpoch",
      "getElectionWinnersInEpoch(uint256):(address[])",
      [ethereum.Value.fromUnsignedBigInt(epochIndex)]
    );

    return result[0].toAddressArray();
  }

  try_getElectionWinnersInEpoch(
    epochIndex: BigInt
  ): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getElectionWinnersInEpoch",
      "getElectionWinnersInEpoch(uint256):(address[])",
      [ethereum.Value.fromUnsignedBigInt(epochIndex)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getEpochEndDateForIndex(epochIndex: BigInt): BigInt {
    let result = super.call(
      "getEpochEndDateForIndex",
      "getEpochEndDateForIndex(uint256):(uint64)",
      [ethereum.Value.fromUnsignedBigInt(epochIndex)]
    );

    return result[0].toBigInt();
  }

  try_getEpochEndDateForIndex(epochIndex: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getEpochEndDateForIndex",
      "getEpochEndDateForIndex(uint256):(uint64)",
      [ethereum.Value.fromUnsignedBigInt(epochIndex)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getEpochStartDateForIndex(epochIndex: BigInt): BigInt {
    let result = super.call(
      "getEpochStartDateForIndex",
      "getEpochStartDateForIndex(uint256):(uint64)",
      [ethereum.Value.fromUnsignedBigInt(epochIndex)]
    );

    return result[0].toBigInt();
  }

  try_getEpochStartDateForIndex(
    epochIndex: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getEpochStartDateForIndex",
      "getEpochStartDateForIndex(uint256):(uint64)",
      [ethereum.Value.fromUnsignedBigInt(epochIndex)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getNominationPeriodStartDateForIndex(epochIndex: BigInt): BigInt {
    let result = super.call(
      "getNominationPeriodStartDateForIndex",
      "getNominationPeriodStartDateForIndex(uint256):(uint64)",
      [ethereum.Value.fromUnsignedBigInt(epochIndex)]
    );

    return result[0].toBigInt();
  }

  try_getNominationPeriodStartDateForIndex(
    epochIndex: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getNominationPeriodStartDateForIndex",
      "getNominationPeriodStartDateForIndex(uint256):(uint64)",
      [ethereum.Value.fromUnsignedBigInt(epochIndex)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getNomineesAtEpoch(epochIndex: BigInt): Array<Address> {
    let result = super.call(
      "getNomineesAtEpoch",
      "getNomineesAtEpoch(uint256):(address[])",
      [ethereum.Value.fromUnsignedBigInt(epochIndex)]
    );

    return result[0].toAddressArray();
  }

  try_getNomineesAtEpoch(
    epochIndex: BigInt
  ): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getNomineesAtEpoch",
      "getNomineesAtEpoch(uint256):(address[])",
      [ethereum.Value.fromUnsignedBigInt(epochIndex)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getVotingPeriodStartDateForIndex(epochIndex: BigInt): BigInt {
    let result = super.call(
      "getVotingPeriodStartDateForIndex",
      "getVotingPeriodStartDateForIndex(uint256):(uint64)",
      [ethereum.Value.fromUnsignedBigInt(epochIndex)]
    );

    return result[0].toBigInt();
  }

  try_getVotingPeriodStartDateForIndex(
    epochIndex: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getVotingPeriodStartDateForIndex",
      "getVotingPeriodStartDateForIndex(uint256):(uint64)",
      [ethereum.Value.fromUnsignedBigInt(epochIndex)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hasVotedInEpoch(user: Address, epochIndex: BigInt): boolean {
    let result = super.call(
      "hasVotedInEpoch",
      "hasVotedInEpoch(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(user),
        ethereum.Value.fromUnsignedBigInt(epochIndex)
      ]
    );

    return result[0].toBoolean();
  }

  try_hasVotedInEpoch(
    user: Address,
    epochIndex: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "hasVotedInEpoch",
      "hasVotedInEpoch(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(user),
        ethereum.Value.fromUnsignedBigInt(epochIndex)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  wasNominated(candidate: Address, epochIndex: BigInt): boolean {
    let result = super.call(
      "wasNominated",
      "wasNominated(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(candidate),
        ethereum.Value.fromUnsignedBigInt(epochIndex)
      ]
    );

    return result[0].toBoolean();
  }

  try_wasNominated(
    candidate: Address,
    epochIndex: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "wasNominated",
      "wasNominated(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(candidate),
        ethereum.Value.fromUnsignedBigInt(epochIndex)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  calculateBallotId(candidates: Array<Address>): Bytes {
    let result = super.call(
      "calculateBallotId",
      "calculateBallotId(address[]):(bytes32)",
      [ethereum.Value.fromAddressArray(candidates)]
    );

    return result[0].toBytes();
  }

  try_calculateBallotId(
    candidates: Array<Address>
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "calculateBallotId",
      "calculateBallotId(address[]):(bytes32)",
      [ethereum.Value.fromAddressArray(candidates)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getBallotCandidates(ballotId: Bytes): Array<Address> {
    let result = super.call(
      "getBallotCandidates",
      "getBallotCandidates(bytes32):(address[])",
      [ethereum.Value.fromFixedBytes(ballotId)]
    );

    return result[0].toAddressArray();
  }

  try_getBallotCandidates(
    ballotId: Bytes
  ): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getBallotCandidates",
      "getBallotCandidates(bytes32):(address[])",
      [ethereum.Value.fromFixedBytes(ballotId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getBallotVoted(user: Address): Bytes {
    let result = super.call(
      "getBallotVoted",
      "getBallotVoted(address):(bytes32)",
      [ethereum.Value.fromAddress(user)]
    );

    return result[0].toBytes();
  }

  try_getBallotVoted(user: Address): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getBallotVoted",
      "getBallotVoted(address):(bytes32)",
      [ethereum.Value.fromAddress(user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getBallotVotes(ballotId: Bytes): BigInt {
    let result = super.call(
      "getBallotVotes",
      "getBallotVotes(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(ballotId)]
    );

    return result[0].toBigInt();
  }

  try_getBallotVotes(ballotId: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getBallotVotes",
      "getBallotVotes(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(ballotId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCandidateVotes(candidate: Address): BigInt {
    let result = super.call(
      "getCandidateVotes",
      "getCandidateVotes(address):(uint256)",
      [ethereum.Value.fromAddress(candidate)]
    );

    return result[0].toBigInt();
  }

  try_getCandidateVotes(candidate: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getCandidateVotes",
      "getCandidateVotes(address):(uint256)",
      [ethereum.Value.fromAddress(candidate)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCouncilMembers(): Array<Address> {
    let result = super.call(
      "getCouncilMembers",
      "getCouncilMembers():(address[])",
      []
    );

    return result[0].toAddressArray();
  }

  try_getCouncilMembers(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getCouncilMembers",
      "getCouncilMembers():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getCouncilToken(): Address {
    let result = super.call(
      "getCouncilToken",
      "getCouncilToken():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getCouncilToken(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getCouncilToken",
      "getCouncilToken():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getCrossChainDebtShareMerkleRoot(): Bytes {
    let result = super.call(
      "getCrossChainDebtShareMerkleRoot",
      "getCrossChainDebtShareMerkleRoot():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_getCrossChainDebtShareMerkleRoot(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getCrossChainDebtShareMerkleRoot",
      "getCrossChainDebtShareMerkleRoot():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getCrossChainDebtShareMerkleRootBlockNumber(): BigInt {
    let result = super.call(
      "getCrossChainDebtShareMerkleRootBlockNumber",
      "getCrossChainDebtShareMerkleRootBlockNumber():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getCrossChainDebtShareMerkleRootBlockNumber(): ethereum.CallResult<
    BigInt
  > {
    let result = super.tryCall(
      "getCrossChainDebtShareMerkleRootBlockNumber",
      "getCrossChainDebtShareMerkleRootBlockNumber():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCurrentPeriod(): BigInt {
    let result = super.call(
      "getCurrentPeriod",
      "getCurrentPeriod():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getCurrentPeriod(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getCurrentPeriod",
      "getCurrentPeriod():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getDebtShare(user: Address): BigInt {
    let result = super.call("getDebtShare", "getDebtShare(address):(uint256)", [
      ethereum.Value.fromAddress(user)
    ]);

    return result[0].toBigInt();
  }

  try_getDebtShare(user: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getDebtShare",
      "getDebtShare(address):(uint256)",
      [ethereum.Value.fromAddress(user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getDebtShareContract(): Address {
    let result = super.call(
      "getDebtShareContract",
      "getDebtShareContract():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getDebtShareContract(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getDebtShareContract",
      "getDebtShareContract():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getDebtShareSnapshotId(): BigInt {
    let result = super.call(
      "getDebtShareSnapshotId",
      "getDebtShareSnapshotId():(uint128)",
      []
    );

    return result[0].toBigInt();
  }

  try_getDebtShareSnapshotId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getDebtShareSnapshotId",
      "getDebtShareSnapshotId():(uint128)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getDeclaredCrossChainDebtShare(user: Address): BigInt {
    let result = super.call(
      "getDeclaredCrossChainDebtShare",
      "getDeclaredCrossChainDebtShare(address):(uint256)",
      [ethereum.Value.fromAddress(user)]
    );

    return result[0].toBigInt();
  }

  try_getDeclaredCrossChainDebtShare(
    user: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getDeclaredCrossChainDebtShare",
      "getDeclaredCrossChainDebtShare(address):(uint256)",
      [ethereum.Value.fromAddress(user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getDefaultBallotEvaluationBatchSize(): BigInt {
    let result = super.call(
      "getDefaultBallotEvaluationBatchSize",
      "getDefaultBallotEvaluationBatchSize():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getDefaultBallotEvaluationBatchSize(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getDefaultBallotEvaluationBatchSize",
      "getDefaultBallotEvaluationBatchSize():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getElectionWinners(): Array<Address> {
    let result = super.call(
      "getElectionWinners",
      "getElectionWinners():(address[])",
      []
    );

    return result[0].toAddressArray();
  }

  try_getElectionWinners(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getElectionWinners",
      "getElectionWinners():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getEpochEndDate(): BigInt {
    let result = super.call(
      "getEpochEndDate",
      "getEpochEndDate():(uint64)",
      []
    );

    return result[0].toBigInt();
  }

  try_getEpochEndDate(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getEpochEndDate",
      "getEpochEndDate():(uint64)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getEpochIndex(): BigInt {
    let result = super.call("getEpochIndex", "getEpochIndex():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getEpochIndex(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getEpochIndex",
      "getEpochIndex():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getEpochStartDate(): BigInt {
    let result = super.call(
      "getEpochStartDate",
      "getEpochStartDate():(uint64)",
      []
    );

    return result[0].toBigInt();
  }

  try_getEpochStartDate(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getEpochStartDate",
      "getEpochStartDate():(uint64)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getMaxDateAdjustmenTolerance(): BigInt {
    let result = super.call(
      "getMaxDateAdjustmenTolerance",
      "getMaxDateAdjustmenTolerance():(uint64)",
      []
    );

    return result[0].toBigInt();
  }

  try_getMaxDateAdjustmenTolerance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getMaxDateAdjustmenTolerance",
      "getMaxDateAdjustmenTolerance():(uint64)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getMinEpochDurations(): ElectionModuleOld__getMinEpochDurationsResult {
    let result = super.call(
      "getMinEpochDurations",
      "getMinEpochDurations():(uint64,uint64,uint64)",
      []
    );

    return new ElectionModuleOld__getMinEpochDurationsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_getMinEpochDurations(): ethereum.CallResult<
    ElectionModuleOld__getMinEpochDurationsResult
  > {
    let result = super.tryCall(
      "getMinEpochDurations",
      "getMinEpochDurations():(uint64,uint64,uint64)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ElectionModuleOld__getMinEpochDurationsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }

  getMinimumActiveMembers(): i32 {
    let result = super.call(
      "getMinimumActiveMembers",
      "getMinimumActiveMembers():(uint8)",
      []
    );

    return result[0].toI32();
  }

  try_getMinimumActiveMembers(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "getMinimumActiveMembers",
      "getMinimumActiveMembers():(uint8)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getNextEpochSeatCount(): i32 {
    let result = super.call(
      "getNextEpochSeatCount",
      "getNextEpochSeatCount():(uint8)",
      []
    );

    return result[0].toI32();
  }

  try_getNextEpochSeatCount(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "getNextEpochSeatCount",
      "getNextEpochSeatCount():(uint8)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getNominationPeriodStartDate(): BigInt {
    let result = super.call(
      "getNominationPeriodStartDate",
      "getNominationPeriodStartDate():(uint64)",
      []
    );

    return result[0].toBigInt();
  }

  try_getNominationPeriodStartDate(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getNominationPeriodStartDate",
      "getNominationPeriodStartDate():(uint64)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getNominees(): Array<Address> {
    let result = super.call("getNominees", "getNominees():(address[])", []);

    return result[0].toAddressArray();
  }

  try_getNominees(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall("getNominees", "getNominees():(address[])", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getVotePower(user: Address): BigInt {
    let result = super.call("getVotePower", "getVotePower(address):(uint256)", [
      ethereum.Value.fromAddress(user)
    ]);

    return result[0].toBigInt();
  }

  try_getVotePower(user: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getVotePower",
      "getVotePower(address):(uint256)",
      [ethereum.Value.fromAddress(user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getVotingPeriodStartDate(): BigInt {
    let result = super.call(
      "getVotingPeriodStartDate",
      "getVotingPeriodStartDate():(uint64)",
      []
    );

    return result[0].toBigInt();
  }

  try_getVotingPeriodStartDate(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getVotingPeriodStartDate",
      "getVotingPeriodStartDate():(uint64)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hasVoted(user: Address): boolean {
    let result = super.call("hasVoted", "hasVoted(address):(bool)", [
      ethereum.Value.fromAddress(user)
    ]);

    return result[0].toBoolean();
  }

  try_hasVoted(user: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasVoted", "hasVoted(address):(bool)", [
      ethereum.Value.fromAddress(user)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isElectionEvaluated(): boolean {
    let result = super.call(
      "isElectionEvaluated",
      "isElectionEvaluated():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_isElectionEvaluated(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isElectionEvaluated",
      "isElectionEvaluated():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isElectionModuleInitialized(): boolean {
    let result = super.call(
      "isElectionModuleInitialized",
      "isElectionModuleInitialized():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_isElectionModuleInitialized(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isElectionModuleInitialized",
      "isElectionModuleInitialized():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isNominated(candidate: Address): boolean {
    let result = super.call("isNominated", "isNominated(address):(bool)", [
      ethereum.Value.fromAddress(candidate)
    ]);

    return result[0].toBoolean();
  }

  try_isNominated(candidate: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isNominated", "isNominated(address):(bool)", [
      ethereum.Value.fromAddress(candidate)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isOwnerModuleInitialized(): boolean {
    let result = super.call(
      "isOwnerModuleInitialized",
      "isOwnerModuleInitialized():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_isOwnerModuleInitialized(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isOwnerModuleInitialized",
      "isOwnerModuleInitialized():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  nominatedOwner(): Address {
    let result = super.call("nominatedOwner", "nominatedOwner():(address)", []);

    return result[0].toAddress();
  }

  try_nominatedOwner(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "nominatedOwner",
      "nominatedOwner():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getImplementation(): Address {
    let result = super.call(
      "getImplementation",
      "getImplementation():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getImplementation(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getImplementation",
      "getImplementation():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class CastCall extends ethereum.Call {
  get inputs(): CastCall__Inputs {
    return new CastCall__Inputs(this);
  }

  get outputs(): CastCall__Outputs {
    return new CastCall__Outputs(this);
  }
}

export class CastCall__Inputs {
  _call: CastCall;

  constructor(call: CastCall) {
    this._call = call;
  }

  get candidates(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class CastCall__Outputs {
  _call: CastCall;

  constructor(call: CastCall) {
    this._call = call;
  }
}

export class DeclareAndCastCall extends ethereum.Call {
  get inputs(): DeclareAndCastCall__Inputs {
    return new DeclareAndCastCall__Inputs(this);
  }

  get outputs(): DeclareAndCastCall__Outputs {
    return new DeclareAndCastCall__Outputs(this);
  }
}

export class DeclareAndCastCall__Inputs {
  _call: DeclareAndCastCall;

  constructor(call: DeclareAndCastCall) {
    this._call = call;
  }

  get debtShare(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get merkleProof(): Array<Bytes> {
    return this._call.inputValues[1].value.toBytesArray();
  }

  get candidates(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }
}

export class DeclareAndCastCall__Outputs {
  _call: DeclareAndCastCall;

  constructor(call: DeclareAndCastCall) {
    this._call = call;
  }
}

export class DeclareCrossChainDebtShareCall extends ethereum.Call {
  get inputs(): DeclareCrossChainDebtShareCall__Inputs {
    return new DeclareCrossChainDebtShareCall__Inputs(this);
  }

  get outputs(): DeclareCrossChainDebtShareCall__Outputs {
    return new DeclareCrossChainDebtShareCall__Outputs(this);
  }
}

export class DeclareCrossChainDebtShareCall__Inputs {
  _call: DeclareCrossChainDebtShareCall;

  constructor(call: DeclareCrossChainDebtShareCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get debtShare(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get merkleProof(): Array<Bytes> {
    return this._call.inputValues[2].value.toBytesArray();
  }
}

export class DeclareCrossChainDebtShareCall__Outputs {
  _call: DeclareCrossChainDebtShareCall;

  constructor(call: DeclareCrossChainDebtShareCall) {
    this._call = call;
  }
}

export class DismissMembersCall extends ethereum.Call {
  get inputs(): DismissMembersCall__Inputs {
    return new DismissMembersCall__Inputs(this);
  }

  get outputs(): DismissMembersCall__Outputs {
    return new DismissMembersCall__Outputs(this);
  }
}

export class DismissMembersCall__Inputs {
  _call: DismissMembersCall;

  constructor(call: DismissMembersCall) {
    this._call = call;
  }

  get membersToDismiss(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class DismissMembersCall__Outputs {
  _call: DismissMembersCall;

  constructor(call: DismissMembersCall) {
    this._call = call;
  }
}

export class EvaluateCall extends ethereum.Call {
  get inputs(): EvaluateCall__Inputs {
    return new EvaluateCall__Inputs(this);
  }

  get outputs(): EvaluateCall__Outputs {
    return new EvaluateCall__Outputs(this);
  }
}

export class EvaluateCall__Inputs {
  _call: EvaluateCall;

  constructor(call: EvaluateCall) {
    this._call = call;
  }

  get numBallots(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class EvaluateCall__Outputs {
  _call: EvaluateCall;

  constructor(call: EvaluateCall) {
    this._call = call;
  }
}

export class InitializeElectionModuleCall extends ethereum.Call {
  get inputs(): InitializeElectionModuleCall__Inputs {
    return new InitializeElectionModuleCall__Inputs(this);
  }

  get outputs(): InitializeElectionModuleCall__Outputs {
    return new InitializeElectionModuleCall__Outputs(this);
  }
}

export class InitializeElectionModuleCall__Inputs {
  _call: InitializeElectionModuleCall;

  constructor(call: InitializeElectionModuleCall) {
    this._call = call;
  }

  get councilTokenName(): string {
    return this._call.inputValues[0].value.toString();
  }

  get councilTokenSymbol(): string {
    return this._call.inputValues[1].value.toString();
  }

  get firstCouncil(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }

  get minimumActiveMembers(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get nominationPeriodStartDate(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get votingPeriodStartDate(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get epochEndDate(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get debtShareContract(): Address {
    return this._call.inputValues[7].value.toAddress();
  }
}

export class InitializeElectionModuleCall__Outputs {
  _call: InitializeElectionModuleCall;

  constructor(call: InitializeElectionModuleCall) {
    this._call = call;
  }
}

export class ModifyEpochScheduleCall extends ethereum.Call {
  get inputs(): ModifyEpochScheduleCall__Inputs {
    return new ModifyEpochScheduleCall__Inputs(this);
  }

  get outputs(): ModifyEpochScheduleCall__Outputs {
    return new ModifyEpochScheduleCall__Outputs(this);
  }
}

export class ModifyEpochScheduleCall__Inputs {
  _call: ModifyEpochScheduleCall;

  constructor(call: ModifyEpochScheduleCall) {
    this._call = call;
  }

  get newNominationPeriodStartDate(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get newVotingPeriodStartDate(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get newEpochEndDate(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ModifyEpochScheduleCall__Outputs {
  _call: ModifyEpochScheduleCall;

  constructor(call: ModifyEpochScheduleCall) {
    this._call = call;
  }
}

export class NominateCall extends ethereum.Call {
  get inputs(): NominateCall__Inputs {
    return new NominateCall__Inputs(this);
  }

  get outputs(): NominateCall__Outputs {
    return new NominateCall__Outputs(this);
  }
}

export class NominateCall__Inputs {
  _call: NominateCall;

  constructor(call: NominateCall) {
    this._call = call;
  }
}

export class NominateCall__Outputs {
  _call: NominateCall;

  constructor(call: NominateCall) {
    this._call = call;
  }
}

export class ResolveCall extends ethereum.Call {
  get inputs(): ResolveCall__Inputs {
    return new ResolveCall__Inputs(this);
  }

  get outputs(): ResolveCall__Outputs {
    return new ResolveCall__Outputs(this);
  }
}

export class ResolveCall__Inputs {
  _call: ResolveCall;

  constructor(call: ResolveCall) {
    this._call = call;
  }
}

export class ResolveCall__Outputs {
  _call: ResolveCall;

  constructor(call: ResolveCall) {
    this._call = call;
  }
}

export class SetCrossChainDebtShareMerkleRootCall extends ethereum.Call {
  get inputs(): SetCrossChainDebtShareMerkleRootCall__Inputs {
    return new SetCrossChainDebtShareMerkleRootCall__Inputs(this);
  }

  get outputs(): SetCrossChainDebtShareMerkleRootCall__Outputs {
    return new SetCrossChainDebtShareMerkleRootCall__Outputs(this);
  }
}

export class SetCrossChainDebtShareMerkleRootCall__Inputs {
  _call: SetCrossChainDebtShareMerkleRootCall;

  constructor(call: SetCrossChainDebtShareMerkleRootCall) {
    this._call = call;
  }

  get merkleRoot(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get blocknumber(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetCrossChainDebtShareMerkleRootCall__Outputs {
  _call: SetCrossChainDebtShareMerkleRootCall;

  constructor(call: SetCrossChainDebtShareMerkleRootCall) {
    this._call = call;
  }
}

export class SetDebtShareContractCall extends ethereum.Call {
  get inputs(): SetDebtShareContractCall__Inputs {
    return new SetDebtShareContractCall__Inputs(this);
  }

  get outputs(): SetDebtShareContractCall__Outputs {
    return new SetDebtShareContractCall__Outputs(this);
  }
}

export class SetDebtShareContractCall__Inputs {
  _call: SetDebtShareContractCall;

  constructor(call: SetDebtShareContractCall) {
    this._call = call;
  }

  get debtShareContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetDebtShareContractCall__Outputs {
  _call: SetDebtShareContractCall;

  constructor(call: SetDebtShareContractCall) {
    this._call = call;
  }
}

export class SetDebtShareSnapshotIdCall extends ethereum.Call {
  get inputs(): SetDebtShareSnapshotIdCall__Inputs {
    return new SetDebtShareSnapshotIdCall__Inputs(this);
  }

  get outputs(): SetDebtShareSnapshotIdCall__Outputs {
    return new SetDebtShareSnapshotIdCall__Outputs(this);
  }
}

export class SetDebtShareSnapshotIdCall__Inputs {
  _call: SetDebtShareSnapshotIdCall;

  constructor(call: SetDebtShareSnapshotIdCall) {
    this._call = call;
  }

  get snapshotId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetDebtShareSnapshotIdCall__Outputs {
  _call: SetDebtShareSnapshotIdCall;

  constructor(call: SetDebtShareSnapshotIdCall) {
    this._call = call;
  }
}

export class SetDefaultBallotEvaluationBatchSizeCall extends ethereum.Call {
  get inputs(): SetDefaultBallotEvaluationBatchSizeCall__Inputs {
    return new SetDefaultBallotEvaluationBatchSizeCall__Inputs(this);
  }

  get outputs(): SetDefaultBallotEvaluationBatchSizeCall__Outputs {
    return new SetDefaultBallotEvaluationBatchSizeCall__Outputs(this);
  }
}

export class SetDefaultBallotEvaluationBatchSizeCall__Inputs {
  _call: SetDefaultBallotEvaluationBatchSizeCall;

  constructor(call: SetDefaultBallotEvaluationBatchSizeCall) {
    this._call = call;
  }

  get newDefaultBallotEvaluationBatchSize(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetDefaultBallotEvaluationBatchSizeCall__Outputs {
  _call: SetDefaultBallotEvaluationBatchSizeCall;

  constructor(call: SetDefaultBallotEvaluationBatchSizeCall) {
    this._call = call;
  }
}

export class SetMaxDateAdjustmentToleranceCall extends ethereum.Call {
  get inputs(): SetMaxDateAdjustmentToleranceCall__Inputs {
    return new SetMaxDateAdjustmentToleranceCall__Inputs(this);
  }

  get outputs(): SetMaxDateAdjustmentToleranceCall__Outputs {
    return new SetMaxDateAdjustmentToleranceCall__Outputs(this);
  }
}

export class SetMaxDateAdjustmentToleranceCall__Inputs {
  _call: SetMaxDateAdjustmentToleranceCall;

  constructor(call: SetMaxDateAdjustmentToleranceCall) {
    this._call = call;
  }

  get newMaxDateAdjustmentTolerance(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMaxDateAdjustmentToleranceCall__Outputs {
  _call: SetMaxDateAdjustmentToleranceCall;

  constructor(call: SetMaxDateAdjustmentToleranceCall) {
    this._call = call;
  }
}

export class SetMinEpochDurationsCall extends ethereum.Call {
  get inputs(): SetMinEpochDurationsCall__Inputs {
    return new SetMinEpochDurationsCall__Inputs(this);
  }

  get outputs(): SetMinEpochDurationsCall__Outputs {
    return new SetMinEpochDurationsCall__Outputs(this);
  }
}

export class SetMinEpochDurationsCall__Inputs {
  _call: SetMinEpochDurationsCall;

  constructor(call: SetMinEpochDurationsCall) {
    this._call = call;
  }

  get newMinNominationPeriodDuration(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get newMinVotingPeriodDuration(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get newMinEpochDuration(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SetMinEpochDurationsCall__Outputs {
  _call: SetMinEpochDurationsCall;

  constructor(call: SetMinEpochDurationsCall) {
    this._call = call;
  }
}

export class SetMinimumActiveMembersCall extends ethereum.Call {
  get inputs(): SetMinimumActiveMembersCall__Inputs {
    return new SetMinimumActiveMembersCall__Inputs(this);
  }

  get outputs(): SetMinimumActiveMembersCall__Outputs {
    return new SetMinimumActiveMembersCall__Outputs(this);
  }
}

export class SetMinimumActiveMembersCall__Inputs {
  _call: SetMinimumActiveMembersCall;

  constructor(call: SetMinimumActiveMembersCall) {
    this._call = call;
  }

  get newMinimumActiveMembers(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class SetMinimumActiveMembersCall__Outputs {
  _call: SetMinimumActiveMembersCall;

  constructor(call: SetMinimumActiveMembersCall) {
    this._call = call;
  }
}

export class SetNextEpochSeatCountCall extends ethereum.Call {
  get inputs(): SetNextEpochSeatCountCall__Inputs {
    return new SetNextEpochSeatCountCall__Inputs(this);
  }

  get outputs(): SetNextEpochSeatCountCall__Outputs {
    return new SetNextEpochSeatCountCall__Outputs(this);
  }
}

export class SetNextEpochSeatCountCall__Inputs {
  _call: SetNextEpochSeatCountCall;

  constructor(call: SetNextEpochSeatCountCall) {
    this._call = call;
  }

  get newSeatCount(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class SetNextEpochSeatCountCall__Outputs {
  _call: SetNextEpochSeatCountCall;

  constructor(call: SetNextEpochSeatCountCall) {
    this._call = call;
  }
}

export class TweakEpochScheduleCall extends ethereum.Call {
  get inputs(): TweakEpochScheduleCall__Inputs {
    return new TweakEpochScheduleCall__Inputs(this);
  }

  get outputs(): TweakEpochScheduleCall__Outputs {
    return new TweakEpochScheduleCall__Outputs(this);
  }
}

export class TweakEpochScheduleCall__Inputs {
  _call: TweakEpochScheduleCall;

  constructor(call: TweakEpochScheduleCall) {
    this._call = call;
  }

  get newNominationPeriodStartDate(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get newVotingPeriodStartDate(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get newEpochEndDate(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TweakEpochScheduleCall__Outputs {
  _call: TweakEpochScheduleCall;

  constructor(call: TweakEpochScheduleCall) {
    this._call = call;
  }
}

export class UpgradeCouncilTokenCall extends ethereum.Call {
  get inputs(): UpgradeCouncilTokenCall__Inputs {
    return new UpgradeCouncilTokenCall__Inputs(this);
  }

  get outputs(): UpgradeCouncilTokenCall__Outputs {
    return new UpgradeCouncilTokenCall__Outputs(this);
  }
}

export class UpgradeCouncilTokenCall__Inputs {
  _call: UpgradeCouncilTokenCall;

  constructor(call: UpgradeCouncilTokenCall) {
    this._call = call;
  }

  get newCouncilTokenImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeCouncilTokenCall__Outputs {
  _call: UpgradeCouncilTokenCall;

  constructor(call: UpgradeCouncilTokenCall) {
    this._call = call;
  }
}

export class WithdrawNominationCall extends ethereum.Call {
  get inputs(): WithdrawNominationCall__Inputs {
    return new WithdrawNominationCall__Inputs(this);
  }

  get outputs(): WithdrawNominationCall__Outputs {
    return new WithdrawNominationCall__Outputs(this);
  }
}

export class WithdrawNominationCall__Inputs {
  _call: WithdrawNominationCall;

  constructor(call: WithdrawNominationCall) {
    this._call = call;
  }
}

export class WithdrawNominationCall__Outputs {
  _call: WithdrawNominationCall;

  constructor(call: WithdrawNominationCall) {
    this._call = call;
  }
}

export class WithdrawVoteCall extends ethereum.Call {
  get inputs(): WithdrawVoteCall__Inputs {
    return new WithdrawVoteCall__Inputs(this);
  }

  get outputs(): WithdrawVoteCall__Outputs {
    return new WithdrawVoteCall__Outputs(this);
  }
}

export class WithdrawVoteCall__Inputs {
  _call: WithdrawVoteCall;

  constructor(call: WithdrawVoteCall) {
    this._call = call;
  }
}

export class WithdrawVoteCall__Outputs {
  _call: WithdrawVoteCall;

  constructor(call: WithdrawVoteCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall extends ethereum.Call {
  get inputs(): AcceptOwnershipCall__Inputs {
    return new AcceptOwnershipCall__Inputs(this);
  }

  get outputs(): AcceptOwnershipCall__Outputs {
    return new AcceptOwnershipCall__Outputs(this);
  }
}

export class AcceptOwnershipCall__Inputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall__Outputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class InitializeOwnerModuleCall extends ethereum.Call {
  get inputs(): InitializeOwnerModuleCall__Inputs {
    return new InitializeOwnerModuleCall__Inputs(this);
  }

  get outputs(): InitializeOwnerModuleCall__Outputs {
    return new InitializeOwnerModuleCall__Outputs(this);
  }
}

export class InitializeOwnerModuleCall__Inputs {
  _call: InitializeOwnerModuleCall;

  constructor(call: InitializeOwnerModuleCall) {
    this._call = call;
  }

  get initialOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeOwnerModuleCall__Outputs {
  _call: InitializeOwnerModuleCall;

  constructor(call: InitializeOwnerModuleCall) {
    this._call = call;
  }
}

export class NominateNewOwnerCall extends ethereum.Call {
  get inputs(): NominateNewOwnerCall__Inputs {
    return new NominateNewOwnerCall__Inputs(this);
  }

  get outputs(): NominateNewOwnerCall__Outputs {
    return new NominateNewOwnerCall__Outputs(this);
  }
}

export class NominateNewOwnerCall__Inputs {
  _call: NominateNewOwnerCall;

  constructor(call: NominateNewOwnerCall) {
    this._call = call;
  }

  get newNominatedOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class NominateNewOwnerCall__Outputs {
  _call: NominateNewOwnerCall;

  constructor(call: NominateNewOwnerCall) {
    this._call = call;
  }
}

export class RenounceNominationCall extends ethereum.Call {
  get inputs(): RenounceNominationCall__Inputs {
    return new RenounceNominationCall__Inputs(this);
  }

  get outputs(): RenounceNominationCall__Outputs {
    return new RenounceNominationCall__Outputs(this);
  }
}

export class RenounceNominationCall__Inputs {
  _call: RenounceNominationCall;

  constructor(call: RenounceNominationCall) {
    this._call = call;
  }
}

export class RenounceNominationCall__Outputs {
  _call: RenounceNominationCall;

  constructor(call: RenounceNominationCall) {
    this._call = call;
  }
}

export class SimulateUpgradeToCall extends ethereum.Call {
  get inputs(): SimulateUpgradeToCall__Inputs {
    return new SimulateUpgradeToCall__Inputs(this);
  }

  get outputs(): SimulateUpgradeToCall__Outputs {
    return new SimulateUpgradeToCall__Outputs(this);
  }
}

export class SimulateUpgradeToCall__Inputs {
  _call: SimulateUpgradeToCall;

  constructor(call: SimulateUpgradeToCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SimulateUpgradeToCall__Outputs {
  _call: SimulateUpgradeToCall;

  constructor(call: SimulateUpgradeToCall) {
    this._call = call;
  }
}

export class UpgradeToCall extends ethereum.Call {
  get inputs(): UpgradeToCall__Inputs {
    return new UpgradeToCall__Inputs(this);
  }

  get outputs(): UpgradeToCall__Outputs {
    return new UpgradeToCall__Outputs(this);
  }
}

export class UpgradeToCall__Inputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeToCall__Outputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }
}
