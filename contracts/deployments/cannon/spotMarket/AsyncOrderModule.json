{
  "address": "0x589C1524a6164e4A11FF37Cc75081eEe2C65627B",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expirationTime",
          "type": "uint256"
        }
      ],
      "name": "IneligibleForCancellation",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "expected",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "actual",
          "type": "uint256"
        }
      ],
      "name": "InsufficientSharesAmount",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "enum Transaction.Type",
          "name": "transactionType",
          "type": "uint8"
        }
      ],
      "name": "InvalidAsyncTransactionType",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "asyncOrderId",
          "type": "uint256"
        }
      ],
      "name": "InvalidClaim",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minimumAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "InvalidCommitmentAmount",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "marketId",
          "type": "uint128"
        }
      ],
      "name": "InvalidMarket",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "settlementStrategyId",
          "type": "uint256"
        }
      ],
      "name": "InvalidSettlementStrategy",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "asyncOrderId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "settledAt",
          "type": "uint256"
        }
      ],
      "name": "OrderAlreadySettled",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OverflowInt256ToUint256",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint128",
          "name": "marketId",
          "type": "uint128"
        },
        {
          "indexed": true,
          "internalType": "uint128",
          "name": "asyncOrderId",
          "type": "uint128"
        },
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "id",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "enum Transaction.Type",
              "name": "orderType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "amountEscrowed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "settlementStrategyId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "settlementTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minimumSettlementAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "settledAt",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "referrer",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct AsyncOrderClaim.Data",
          "name": "asyncOrderClaim",
          "type": "tuple"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "OrderCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint128",
          "name": "marketId",
          "type": "uint128"
        },
        {
          "indexed": true,
          "internalType": "enum Transaction.Type",
          "name": "orderType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountProvided",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "asyncOrderId",
          "type": "uint128"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        }
      ],
      "name": "OrderCommitted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "marketId",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "asyncOrderId",
          "type": "uint128"
        }
      ],
      "name": "cancelOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "marketId",
          "type": "uint128"
        },
        {
          "internalType": "enum Transaction.Type",
          "name": "orderType",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "amountProvided",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "settlementStrategyId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minimumSettlementAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        }
      ],
      "name": "commitOrder",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "id",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "enum Transaction.Type",
              "name": "orderType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "amountEscrowed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "settlementStrategyId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "settlementTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minimumSettlementAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "settledAt",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "referrer",
              "type": "address"
            }
          ],
          "internalType": "struct AsyncOrderClaim.Data",
          "name": "asyncOrderClaim",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "marketId",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "asyncOrderId",
          "type": "uint128"
        }
      ],
      "name": "getAsyncOrderClaim",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "id",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "enum Transaction.Type",
              "name": "orderType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "amountEscrowed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "settlementStrategyId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "settlementTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minimumSettlementAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "settledAt",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "referrer",
              "type": "address"
            }
          ],
          "internalType": "struct AsyncOrderClaim.Data",
          "name": "asyncOrderClaim",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "constructorArgs": [],
  "linkedLibraries": {},
  "deployTxnHash": "0xaab29303b8d6d4c771f331e8418db1fce73a5996dc1b6294182a5b9bbbc9e968",
  "sourceName": "contracts/modules/AsyncOrderModule.sol",
  "contractName": "AsyncOrderModule",
  "deployedOn": "contract.AsyncOrderModule"
}
